///////////////////////////////////////////////////////////////////////////
                              Reflection
                          Workshop - #3 (P2)
Full Name  :  Rendell Velasco
Student ID#:  140014128
Email      :  rvelasco6@myseneca.ca 
Section    :  NDD

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1.	Weight1 is the product. The 1 can be changed from 1-3 for the three different products that are stored e.g. (weight1, weight2, weight3). CustomerServings is the customer preference. 

These are the logical expression for a comparison of customer preference to ONE PRODUCT

        (customerServings >= 1 && customerServings <= 4) && (weight1 == 250) ||
        (customerServings >= 4 && customerServings <= 9) && (weight1 == 500) ||
        (customerServings >= 10) && (weight1 == 1000),

    a)	For ONE PRODUCT comparison I used 8 relational expressions. 
        1.	customerServings >= 1
        2.	customerServings <= 4
        3.	weight1 == 250
        4.	customerServings >= 4 
        5.	customerServings <= 9
        6.	weight1 == 500
        7.	customerServings >= 10
        8.	weight1 == 1000

    b)	For ONE PRODUCT comparison I used 5 logical expressions.
        1.	customerServings >= 1 && customerServings <= 4
        2.	customerServings >= 1 && customerServings <= 4 && weight1 == 250
        3.	customerServings >= 4 && customerServings <= 9
        4.	customerServings >= 4 && customerServings <= 9 && weight1 == 500
        5.	customerServings >= 10 && weight1 == 1000

2.	With DeMorganâ€™s Law: !(productID1 == productID2 || productID1 == productID3)
    Without DeMorgan's law: productID1 != productID2 && productID1 != productID3

    The one I used for my code was the one without DeMorgan's law.

3.  Two ways that variables can be organized are grouping them with their respective types or grouping them together based on customer and the seller. Grouping the based on their types can be done by gathering them and adding commas when you are declaring them on one line. Whereas grouping them based on customer and seller you would group the variables used by the seller separate from the variables that would be used by the customers. 



